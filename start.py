from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from models import User, Session
from sqlalchemy import select

router = Router()

@router.message(F.text == "/start")
async def start_cmd(message: Message):
    async with Session() as session:
        # –ü–æ–∏—Å–∫ –ø–æ telegram_id, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë–º, –µ—Å–ª–∏ –µ—Å—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –±–µ—Ä—ë–º
        user = await session.scalar(select(User).where(User.telegram_id == message.from_user.id))
        if user is None:
            user = User(
                telegram_id=message.from_user.id,
                full_name=message.from_user.full_name,
                username=message.from_user.username
            )
            session.add(user)
            await session.commit()
            await session.refresh(user)
    await send_main_menu(message)

async def send_main_menu(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üîç –ü–∞—Ä—Å–µ—Ä", callback_data="start_parse"),
        ],
        [
            #InlineKeyboardButton(text="üí£ –°–ø–∞–º–µ—Ä –ø–æ –õ–°", callback_data="start_spam"),
        ],
        [
            InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data="add_account"),
            InlineKeyboardButton(text="üìÅ –ú–æ–∏ –∞–∫–∫–∞—É–Ω—Ç—ã", callback_data="my_accounts"),
        ]
    ])
    await message.answer(
        text="üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

@router.callback_query(F.data == "back_to_menu")
async def back_to_menu(callback: CallbackQuery):
    await callback.message.delete()
    await send_main_menu(callback.message)
    await callback.answer()
